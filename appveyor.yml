version: '{branch}-{build}'

environment:

    matrix:

      - JOB: "2.7 32-bit"
        TOXENV: "py27"
        PYTHON: "C:\\Python27"
        PYTHON_VERSION: "2.7"
        PYTHON_ARCH: "32"

      - JOB: "3.5 64-bit"
        TOXENV: "py35"
        PYTHON: "C:\\Python35-x64"
        PYTHON_VERSION: "3.5"
        PYTHON_ARCH: "64"

      - JOB: "3.6 64-bit"
        TOXENV: "py36"
        PYTHON: "C:\\Python36-x64"
        PYTHON_VERSION: "3.6"
        PYTHON_ARCH: "64"

      - JOB: "3.7 64-bit"
        TOXENV: "py37"
        PYTHON: "C:\\Python37-x64"
        PYTHON_VERSION: "3.7"
        PYTHON_ARCH: "64"

init:
  # Used to RDP into build worker
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""

  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
      throw "There are newer queued builds for this pull request, failing early." }

install:
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --upgrade pip"
  - "pip --version"

  - "pip install -r requirements.txt -U"
  - "pip install -r dev/requirements.txt -U"
  - "pip install -e ."

build: none

test_script:
  # Split tests into several subprocesses.
  - choco install codecov
  - "py.test -n 4 --cov --cov-config .coveragerc --cov-report xml --cov pyupdater --cov-append"
  - codecov -f coverage.xml
